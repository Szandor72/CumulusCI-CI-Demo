name: Feature

on:
    pull_request:
        branches:
            - main

env:
    CUMULUSCI_KEY: ${{ secrets.CUMULUSCI_KEY }}
    CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_github }}
jobs:
    unit_tests:
        name: "Run Feature Build"
        runs-on: ubuntu-latest
        steps:
            - run: |
                  echo "Action running on ${{ runner.os }}"
                  echo "Checkout ${{ github.ref }} from ${{ github.repository }}."
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3

            - name: Cache node modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install SFDX
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: |
                  npm install sfdx-cli

            - name: Authenticate SFDX
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > sfdx_auth
                  sfdx auth:sfdxurl:store -f sfdx_auth -d

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install CumulusCI
              run: |
                  python -m pip install -U pip
                  pip install cumulusci

            - name: Build Org and Execute Apex Integration / Unit Tests
              run: |
                  cci flow run ci_feature --org dev

            - name: Run functional Tests with Robot
              run: |
                  cci task run robot --org dev -o vars BROWSER:headlesschrome

            - name: Store robot results
              uses: actions/upload-artifact@v1
              with:
                  name: robot
                  path: robot/cci-ci-demo/results

            - name: Delete Scratch Org
              if: ${{ always() }}
              run: |
                  cci org scratch_delete dev
